{"version":3,"sources":["logo.svg","views/components/Axis.js","views/components/Line.js","views/MultiLineChart.js","views/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["Axis","type","scale","ticks","tickFormat","tickSize","disableAnimation","props","ref","React","useRef","useEffect","axis","d3","axisGroup","current","call","transition","duration","ease","select","remove","selectAll","attr","LineGroup","xScale","yScale","getColor","data","line","x","d","Date","year","month","day","y","skill","enter","append","player","curve","style","MultiLineChart","players","Map","colors","dimensions","width","height","margin","svgWidth","inline","svgHeight","block","range","domain","nice","viewBox","preserveAspectRatio","transform","Line","Array","from","keys","map","playerName","filter","get","Controls","newPlayer","setNewPlayer","clickAddPlayer","clickDeletePlayer","id","onSubmit","color","verticalAlign","display","marginRight","border","borderColor","onClick","event","value","onChange","target","placeholder","App","ranks","require","useState","setPlayers","className","preventDefault","has","toLowerCase","_players","randomHex","Math","floor","random","randomColor","set","console","log","delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e587e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport * as d3 from \"d3\";\n\nconst Axis = ({type, scale, ticks, tickFormat, tickSize, disableAnimation, ...props}) => {\n  const ref = React.useRef(null);\n\n  React.useEffect(() => {\n    const axisGenerator = type == \"left\" ? d3.axisLeft : d3.axisBottom;\n    const axis = axisGenerator(scale)\n      .ticks(ticks)\n      .tickSize(tickSize)\n      .tickFormat(tickFormat);\n\n  const axisGroup = d3.select(ref.current);\n\n  if (disableAnimation) {\n      axisGroup.call(axis);\n    } else {\n      axisGroup.transition()\n        .duration(750)\n        .ease(d3.easeLinear)\n        .call(axis);\n    }\n\n    axisGroup.select(\".domain\").remove();\n    // axisGroup.selectAll(\"line\").remove();\n\n    axisGroup.selectAll(\"text\")\n      .attr(\"class\", \"axis label\");\n  }, [scale, ticks, tickFormat, disableAnimation]);\n\n  return <g ref={ref} {...props} />;\n};\n\nexport default Axis;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nconst LineGroup = ({xScale, yScale, getColor, data, ...props}) => {\n  const ref = React.useRef(null);\n\n  const line = d3.line()\n    .x(d => xScale(new Date(d.year, d.month - 1, d.day)))\n    .y(d => yScale(1500 + 100 * d.skill));\n\n  React.useEffect( () => {\n    d3.select(ref.current)\n      .attr(\"opacity\", 1)\n      .selectAll('path')\n      .data(data)\n      .enter().append('path')\n        .attr('d', player => line(player.curve))\n        .attr('fill', 'none')\n        .style('stroke-width', 2)\n        .attr('stroke', player => getColor(player.player));\n  }, [data]);\n\n\n  return <g ref={ref} {...props}> </g>;\n};\n\nexport default LineGroup;\n","import React from \"react\";\nimport Axis from \"./components/Axis.js\";\nimport LineGroup from \"./components/Line.js\";\n\nimport * as d3 from \"d3\";\n\nconst dimensions = {\n  width: 600,\n  height: 300,\n  margin: { block: 30, inline: 50 }\n};\n\nexport default function MultiLineChart({players = new Map(), colors = {}, data = [], dimensions}) {\n\n  const svgRef = React.useRef(null);\n  const { width, height, margin } = dimensions;\n  const svgWidth = margin.inline + width + margin.inline;\n  const svgHeight = margin.block + height + margin.block;\n\n  const xScale = d3.scaleTime()\n                   .range([0, width])\n                   .domain(\n                     [new Date(2004, 0), new Date()]\n                   ).nice();\n\n  const yScale = d3.scaleLinear()\n                   .range([height, 0])\n                   .domain([0, 3000]);\n\n  return <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`} preserveAspectRatio={\"xMinYMin meet\"}>\n    <g transform={`translate(${margin.inline},${margin.block})`}>\n      <Axis\n        type=\"left\"\n        ticks={5}\n        tickSize={-width}\n        scale={yScale}\n      />\n      <Axis \n        type=\"bottom\"\n        ticks={10}\n        tickSize={-height}\n        scale={xScale}\n        transform={`translate(0, ${height})`}\n      />\n      <LineGroup\n        key=\"all\"\n        data={data}\n        xScale={xScale}\n        yScale={yScale}\n        getColor={player => \"rgba(0, 0, 0, 0.02)\"}\n      />\n      {Array.from(players.keys()).map(playerName =>\n        <LineGroup\n          key={playerName}\n          data={data.filter(player => player.player == playerName)}\n          xScale={xScale}\n          yScale={yScale}\n          getColor={player => (players.get(player) || \"rgba(0, 0, 0, 1)\")}\n        />\n      )}\n    </g>\n  </svg>;\n}\n","import React from 'react';\n\nexport default function Controls({ players, newPlayer, setNewPlayer, clickAddPlayer, clickDeletePlayer }) {\n  return <form id=\"controls\" onSubmit={clickAddPlayer}>\n    <ul>\n    { Array.from(players.keys()).map(player =>\n      <li key={player} style={{color: players.get(player)}}>\n        <hr style={{\n            verticalAlign: 'middle',\n            display: 'inline-block',\n            width: '40px',\n            height: 0,\n            marginRight: '1ch',\n            border: '1px solid',\n            borderColor: players.get(player)}}/>\n\n        {player}\n\n        <button onClick={event => clickDeletePlayer(player, event)}>-</button>\n      </li>\n    ) }\n    <li>\n      <span></span>\n      <input\n        value={newPlayer}\n        onChange={event => setNewPlayer(event.target.value)}\n        placeholder=\"Enter new player...\"\n      />\n      <input type=\"submit\" value=\"+\" />\n    </li>\n    </ul>\n    </form>;\n}\n","import logo from './logo.svg';\nimport MultiLineChart from \"./views/MultiLineChart.js\";\nimport Controls from \"./views/Controls.js\";\nimport './App.css';\n\nimport React from 'react';\nimport * as d3 from \"d3\";\n\nconst dimensions = {width: 1200, height: 600, margin: { inline: 100, block: 30 }};\n\nfunction App() {\n  const ranks = require('./ranks.json');\n\n  const [ players, setPlayers ] = React.useState(new Map());\n  const [ newPlayer, setNewPlayer ] = React.useState(\"\");\n\n  const clickAddPlayer = event => {\n    event.preventDefault();\n\n    // setPlayers(players.concat([newPlayer]));\n    if (!players.has(newPlayer.toLowerCase())) {\n      const _players = new Map(players);\n      const randomHex = () => Math.floor(64 + Math.random() * 192);\n      const randomColor = `rgb(${randomHex()}, ${randomHex()}, ${randomHex()})`;\n      _players.set(newPlayer.toLowerCase(), randomColor);\n      console.log(_players);\n      setPlayers(_players);\n    }\n    setNewPlayer(\"\");\n  };\n\n  const clickDeletePlayer = (player, event) => {\n    event.preventDefault();\n    const _players = new Map(players);\n    _players.delete(player);\n    setPlayers(_players);\n  };\n\n  return (\n    <div className=\"App\">\n      <MultiLineChart players={players} data={ranks} dimensions={dimensions} />\n      <Controls players={players} newPlayer={newPlayer} setNewPlayer={setNewPlayer} clickAddPlayer={clickAddPlayer} clickDeletePlayer={clickDeletePlayer} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}